apiVersion: v1
kind: Template
metadata:
  annotations:
    iconClass: icon-java
    tags: java
    version: 1.0.0
    openshift.io/display-name: Springboot REST Deployment
    openshift.io/provider-display-name: Marcus Sacramento
    description: Deployment de aplicações em Spring Boot para serviços REST
  name: spring-boot-rest-deployment
parameters:
- name: APPLICATION_NAME
  required: true
  displayName: Nome da Aplicação
  description: Nome da Aplicação
  value: spring-boot-rest
- name: IMAGE_STREAM_NAMESPACE
  displayName: ImageStream Namespace
  description: Namespace onde a imagem deverá ser buscada
  required: true
- name: IMAGE_STREAM_VERSION
  required: true
  displayName: Versão da Imagem
  description: Versão da imagem. para o CI designa o ambiente da imagem(dev,tst,hom,prd)
  value: latest
- name: APPLICATION_CONTEXT
  required: true
  displayName: Contexto para Teste da Aplicação
  description: Contexto a ser utilizado para o Health Check e Liveness Probe
  value: /info
- name: MEMORY_LIMIT_MIN
  required: true
  displayName: Mínimo de Memória
  description: Quantidade Mínima de memória a ser alocada para aplicação
  value: 512Mi
- name: MEMORY_LIMIT_MAX
  required: true
  displayName: Máximo de Memória
  description: Quantidade Máxima de memória a ser alocada para aplicação
  value: 1Gi
- name: PROCESSOR_LIMIT_MIN
  required: true
  displayName: Mínimo de Processador
  description: Quantidade Mínima de processador a ser alocado para aplicação
  value: 200m
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      application: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: CATALOG_ENDPOINT
            value: "http://spring-boot-rest:8091"
          image: ${APPLICATION_NAME}:${IMAGE_STREAM_VERSION}
          namespace: ${IMAGE_STREAM_NAMESPACE}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /${APPLICATION_CONTEXT}
              port: 8091
              scheme: HTTP
            initialDelaySeconds: 45
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8091
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: ${APPLICATION_CONTEXT}
              port: 8091
              scheme: HTTP
            initialDelaySeconds: 45
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_LIMIT_MAX}
              cpu: 1
            requests:
              memory: ${MEMORY_LIMIT_MIN}
              cpu: ${PROCESSOR_LIMIT_MIN}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:${IMAGE_STREAM_VERSION}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8091
      protocol: TCP
      targetPort: 8091
    selector:
      deploymentconfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
